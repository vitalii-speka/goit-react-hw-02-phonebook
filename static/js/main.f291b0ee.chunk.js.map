{"version":3,"sources":["componets/ContactList/ContactList.module.css","componets/Filter/Filter.module.css","componets/ContactForm/ContactForm.js","componets/ContactList/ContactList.js","componets/Filter/Filter.js","App.js","index.js","componets/ContactForm/ContactForm.module.css"],"names":["module","exports","uuidv4","require","v4","ContactForm","state","name","number","handleCheange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onAddContact","reset","nameInputId","numberInputId","className","styles","TaskEditor","onSubmit","this","TaskEditor_label","htmlFor","TaskEditor_input","type","onChange","TaskEditor_button","Component","ContactList","contacts","onRemoveContact","TaskList","map","contact","TaskList_item","TaskList_button","onClick","id","prototype","PropTypes","func","isRequired","arrayOf","shape","string","Filter","onChangeFilter","target","App","filter","addContact","task","cont","includes","alert","length","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f291b0ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__dxjoH\",\"TaskList_item\":\"ContactList_TaskList_item__ZPeqP\",\"completed\":\"ContactList_completed__ODDaP\",\"TaskList_text\":\"ContactList_TaskList_text__kXJ-R\",\"TaskList_actions\":\"ContactList_TaskList_actions__1DWaK\",\"TaskList_button\":\"ContactList_TaskList_button__3iTYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList_item\":\"Filter_TaskList_item__9eQ6j\",\"TaskEditor_input\":\"Filter_TaskEditor_input__1bOuo\"};","import styles from './ContactForm.module.css';\r\nimport { Component } from 'react';\r\nconst { v4: uuidv4 } = require('uuid');\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleCheange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\r\n          <label className={styles.TaskEditor_label} htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              className={styles.TaskEditor_input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleCheange}\r\n            />\r\n          </label>\r\n          <label\r\n            className={styles.TaskEditor_label}\r\n            htmlFor={this.numberInputId}\r\n          >\r\n            Number\r\n            <input\r\n              className={styles.TaskEditor_input}\r\n              type=\"number\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleCheange}\r\n            />\r\n            <button className={styles.TaskEditor_button} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n          </label>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.TaskList}>\r\n    {contacts.map(contact => (\r\n      <li className={styles.TaskList_item} key={contact.id}>\r\n        {contact.name + ' : ' + contact.number}\r\n        {\r\n          <button\r\n            className={styles.TaskList_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.prototype = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <label className={styles.TaskList_item}>\r\n    Find contacts by neme\r\n    <input\r\n      className={styles.TaskEditor_input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e => onChangeFilter(e.target.value)}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.prototype = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './componets/ContactForm';\r\nimport ContactList from './componets/ContactList';\r\nimport Filter from './componets/Filter';\r\n\r\n// console.log(uuidv4());\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Oleg Pupkin', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Nastyshka Opasnost', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Gore Programist', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Ruki Kryki', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = task => {\r\n    const searchSameName = this.state.contacts\r\n      .map(cont => cont.name)\r\n      .includes(task.name);\r\n\r\n    if (searchSameName) {\r\n      alert(`${task.name} is already in contacts`);\r\n    } else if (task.name.length === 0) {\r\n      alert('Fields must be filled!');\r\n    } else {\r\n      const contact = {\r\n        ...task,\r\n        id: uuidv4(),\r\n      };\r\n\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contacts =>\r\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAddContact={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        {/* вариант 1 - скрытый поиск по имени ==> не нравится отображеие! */}\r\n        {/* {visibleContacts.length >= 1 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )} */}\r\n\r\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n\r\n        {visibleContacts.length > 0 && (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__2tV89\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__2DAeP\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__17WBD\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__2gZDe\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__R_gsd\"};"],"sourceRoot":""}